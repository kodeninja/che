package org.eclipse.che.ide.client;

import com.google.inject.Inject;
import com.google.inject.Provider;
import com.google.inject.Singleton;
import java.util.HashMap;
import java.util.Map;
/**
 * THIS CLASS WILL BE OVERRIDDEN BY MAVEN BUILD. DON'T EDIT CLASS, IT WILL HAVE NO EFFECT.
 */
@Singleton
@SuppressWarnings("rawtypes")
public class ExtensionManager
{

   /** Contains the map will all the Extension Providers <FullClassFQN, Provider>. */
   protected final Map<String, Provider> extensions = new HashMap<>();

   /** Constructor that accepts all the Extension found in IDE package */
   @Inject
   public ExtensionManager(
      Provider<org.eclipse.che.ide.ext.git.client.GitExtension> gitextension,
      Provider<org.eclipse.che.ide.editor.orion.client.OrionEditorExtension> orioneditorextension,
      Provider<org.eclipse.che.plugin.cpp.ide.CppExtension> cppextension,
      Provider<org.eclipse.che.plugin.debugger.ide.DebuggerExtension> debuggerextension,
      Provider<org.eclipse.che.ide.extension.machine.client.MachineExtension> machineextension,
      Provider<org.eclipse.che.plugin.svn.ide.SubversionExtension> subversionextension,
      Provider<org.eclipse.che.ide.ext.web.WebExtension> webextension,
      Provider<org.eclipse.che.plugin.nodejs.ide.NodeJsExtension> nodejsextension,
      Provider<org.eclipse.che.plugin.csharp.ide.CSharpExtension> csharpextension,
      Provider<org.eclipse.che.plugin.zdb.ide.ZendDbgExtension> zenddbgextension,
      Provider<org.eclipse.che.plugin.nodejsdbg.ide.NodeJsDebuggerExtension> nodejsdebuggerextension,
      Provider<org.eclipse.che.ide.ext.gwt.client.GwtExtension> gwtextension,
      Provider<org.eclipse.che.plugin.github.ide.GitHubExtension> githubextension,
      Provider<org.eclipse.che.plugin.php.ide.PhpExtension> phpextension,
      Provider<org.eclipse.che.ide.ext.dashboard.client.DashboardExtension> dashboardextension,
      Provider<org.eclipse.che.plugin.composer.ide.ComposerExtension> composerextension,
      Provider<org.eclipse.che.plugin.languageserver.ide.LanguageServerExtension> languageserverextension,
      Provider<org.eclipse.che.plugin.gdb.ide.GdbExtension> gdbextension,
      Provider<org.eclipse.che.plugin.testing.ide.TestingExtension> testingextension,
      Provider<org.eclipse.che.plugin.python.ide.PythonExtension> pythonextension,
      Provider<org.eclipse.che.ide.ext.plugins.client.GwtCheExtension> gwtcheextension,
      Provider<org.eclipse.che.plugin.maven.client.MavenExtension> mavenextension,
      Provider<org.eclipse.che.ide.ext.java.client.JavaEditorExtension> javaeditorextension,
      Provider<org.eclipse.che.ide.ext.ssh.client.SshExtension> sshextension,
      Provider<org.eclipse.che.ide.ext.java.client.JavaExtension> javaextension,
      Provider<org.eclipse.che.ide.orion.compare.OrionCompareExtension> orioncompareextension,
      Provider<org.eclipse.che.plugin.jdb.ide.JavaDebuggerExtension> javadebuggerextension,
      Provider<org.eclipse.che.plugin.ssh.key.client.SshKeyExtension> sshkeyextension,
      Provider<org.eclipse.che.ide.ext.help.client.HelpAboutExtension> helpaboutextension
   )
   {
      this.extensions.put("org.eclipse.che.ide.ext.git.client.GitExtension",gitextension);
      this.extensions.put("org.eclipse.che.ide.editor.orion.client.OrionEditorExtension",orioneditorextension);
      this.extensions.put("org.eclipse.che.plugin.cpp.ide.CppExtension",cppextension);
      this.extensions.put("org.eclipse.che.plugin.debugger.ide.DebuggerExtension",debuggerextension);
      this.extensions.put("org.eclipse.che.ide.extension.machine.client.MachineExtension",machineextension);
      this.extensions.put("org.eclipse.che.plugin.svn.ide.SubversionExtension",subversionextension);
      this.extensions.put("org.eclipse.che.ide.ext.web.WebExtension",webextension);
      this.extensions.put("org.eclipse.che.plugin.nodejs.ide.NodeJsExtension",nodejsextension);
      this.extensions.put("org.eclipse.che.plugin.csharp.ide.CSharpExtension",csharpextension);
      this.extensions.put("org.eclipse.che.plugin.zdb.ide.ZendDbgExtension",zenddbgextension);
      this.extensions.put("org.eclipse.che.plugin.nodejsdbg.ide.NodeJsDebuggerExtension",nodejsdebuggerextension);
      this.extensions.put("org.eclipse.che.ide.ext.gwt.client.GwtExtension",gwtextension);
      this.extensions.put("org.eclipse.che.plugin.github.ide.GitHubExtension",githubextension);
      this.extensions.put("org.eclipse.che.plugin.php.ide.PhpExtension",phpextension);
      this.extensions.put("org.eclipse.che.ide.ext.dashboard.client.DashboardExtension",dashboardextension);
      this.extensions.put("org.eclipse.che.plugin.composer.ide.ComposerExtension",composerextension);
      this.extensions.put("org.eclipse.che.plugin.languageserver.ide.LanguageServerExtension",languageserverextension);
      this.extensions.put("org.eclipse.che.plugin.gdb.ide.GdbExtension",gdbextension);
      this.extensions.put("org.eclipse.che.plugin.testing.ide.TestingExtension",testingextension);
      this.extensions.put("org.eclipse.che.plugin.python.ide.PythonExtension",pythonextension);
      this.extensions.put("org.eclipse.che.ide.ext.plugins.client.GwtCheExtension",gwtcheextension);
      this.extensions.put("org.eclipse.che.plugin.maven.client.MavenExtension",mavenextension);
      this.extensions.put("org.eclipse.che.ide.ext.java.client.JavaEditorExtension",javaeditorextension);
      this.extensions.put("org.eclipse.che.ide.ext.ssh.client.SshExtension",sshextension);
      this.extensions.put("org.eclipse.che.ide.ext.java.client.JavaExtension",javaextension);
      this.extensions.put("org.eclipse.che.ide.orion.compare.OrionCompareExtension",orioncompareextension);
      this.extensions.put("org.eclipse.che.plugin.jdb.ide.JavaDebuggerExtension",javadebuggerextension);
      this.extensions.put("org.eclipse.che.plugin.ssh.key.client.SshKeyExtension",sshkeyextension);
      this.extensions.put("org.eclipse.che.ide.ext.help.client.HelpAboutExtension",helpaboutextension);
   }

   /** Returns  the map will all the Extension Providers <FullClassFQN, Provider>. */
   public Map<String, Provider> getExtensions()
   {
      return extensions;
   }
}
